{"ast":null,"code":"var _jsxFileName = \"/Users/dustin/dustins/react-masterclass/src/App.tsx\",\n  _s = $RefreshSig$();\nimport styled from \"styled-components\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { useRecoilState } from \"recoil\";\nimport { toDoState } from \"./atoms\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  display: flex;\n  max-width: 480px;\n  width: 100%;\n  margin: 0 auto;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n_c = Wrapper;\nconst Boards = styled.div`\n  display: grid;\n  width: 100%;\n  grid-template-columns: repeat(3, 1fr);\n`;\n_c2 = Boards;\nconst Board = styled.div`\n  padding: 20px 10px;\n  padding-top: 30px;\n  border-radius: 10px;\n  min-height: 200px;\n  background-color: ${props => props.theme.boardColor};\n`;\n_c3 = Board;\nconst Card = styled.div`\n  border-radius: 10px;\n  padding: 10px 10px;\n  margin-bottom: 5px;\n  background-color: ${props => props.theme.cardColor};\n`;\n_c4 = Card;\nfunction App() {\n  _s();\n  const [toDos, setToDos] = useRecoilState(toDoState);\n  const onDragEnd = _ref => {\n    let {\n      draggableId,\n      destination,\n      source\n    } = _ref;\n    if (!destination) return;\n    setToDos(oldToDos => {\n      const copyToDos = [...oldToDos];\n      copyToDos.splice(source.index, 1);\n      copyToDos.splice(destination === null || destination === void 0 ? void 0 : destination.index, 0, draggableId);\n      return copyToDos;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: /*#__PURE__*/_jsxDEV(Boards, {\n        children: /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"one\",\n          children: provided => /*#__PURE__*/_jsxDEV(Board, {\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            children: [toDos.map((toDo, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: toDo,\n              index: index,\n              children: provided => /*#__PURE__*/_jsxDEV(Card, {\n                ref: provided.innerRef,\n                ...provided.dragHandleProps,\n                ...provided.draggableProps,\n                children: toDo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 23\n              }, this)\n            }, toDo, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5a67h5XNEBDPty+W6+XWtUnHNYw=\", false, function () {\n  return [useRecoilState];\n});\n_c5 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Boards\");\n$RefreshReg$(_c3, \"Board\");\n$RefreshReg$(_c4, \"Card\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["styled","DragDropContext","Droppable","Draggable","useRecoilState","toDoState","Wrapper","div","Boards","Board","props","theme","boardColor","Card","cardColor","App","toDos","setToDos","onDragEnd","draggableId","destination","source","oldToDos","copyToDos","splice","index","provided","innerRef","droppableProps","map","toDo","dragHandleProps","draggableProps","placeholder"],"sources":["/Users/dustin/dustins/react-masterclass/src/App.tsx"],"sourcesContent":["import styled from \"styled-components\";\nimport {\n  DragDropContext,\n  Droppable,\n  Draggable,\n  DropResult,\n} from \"react-beautiful-dnd\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { toDoState } from \"./atoms\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  max-width: 480px;\n  width: 100%;\n  margin: 0 auto;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\nconst Boards = styled.div`\n  display: grid;\n  width: 100%;\n  grid-template-columns: repeat(3, 1fr);\n`;\nconst Board = styled.div`\n  padding: 20px 10px;\n  padding-top: 30px;\n  border-radius: 10px;\n  min-height: 200px;\n  background-color: ${(props) => props.theme.boardColor};\n`;\nconst Card = styled.div`\n  border-radius: 10px;\n  padding: 10px 10px;\n  margin-bottom: 5px;\n  background-color: ${(props) => props.theme.cardColor};\n`;\n\nfunction App() {\n  const [toDos, setToDos] = useRecoilState(toDoState);\n  const onDragEnd = ({ draggableId, destination, source }: DropResult) => {\n    if (!destination) return;\n    setToDos((oldToDos) => {\n      const copyToDos = [...oldToDos];\n      copyToDos.splice(source.index, 1);\n      copyToDos.splice(destination?.index, 0, draggableId);\n      return copyToDos;\n    });\n  };\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Wrapper>\n        <Boards>\n          <Droppable droppableId=\"one\">\n            {(provided) => (\n              <Board ref={provided.innerRef} {...provided.droppableProps}>\n                {toDos.map((toDo, index) => (\n                  <Draggable key={toDo} draggableId={toDo} index={index}>\n                    {(provided) => (\n                      <Card\n                        ref={provided.innerRef}\n                        {...provided.dragHandleProps}\n                        {...provided.draggableProps}\n                      >\n                        {toDo}\n                      </Card>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </Board>\n            )}\n          </Droppable>\n        </Boards>\n      </Wrapper>\n    </DragDropContext>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,mBAAmB;AACtC,SACEC,eAAe,EACfC,SAAS,EACTC,SAAS,QAEJ,qBAAqB;AAC5B,SAASC,cAAc,QAAwB,QAAQ;AACvD,SAASC,SAAS,QAAQ,SAAS;AAAC;AAEpC,MAAMC,OAAO,GAAGN,MAAM,CAACO,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,KARID,OAAO;AASb,MAAME,MAAM,GAAGR,MAAM,CAACO,GAAI;AAC1B;AACA;AACA;AACA,CAAC;AAAC,MAJIC,MAAM;AAKZ,MAAMC,KAAK,GAAGT,MAAM,CAACO,GAAI;AACzB;AACA;AACA;AACA;AACA,sBAAuBG,KAAK,IAAKA,KAAK,CAACC,KAAK,CAACC,UAAW;AACxD,CAAC;AAAC,MANIH,KAAK;AAOX,MAAMI,IAAI,GAAGb,MAAM,CAACO,GAAI;AACxB;AACA;AACA;AACA,sBAAuBG,KAAK,IAAKA,KAAK,CAACC,KAAK,CAACG,SAAU;AACvD,CAAC;AAAC,MALID,IAAI;AAOV,SAASE,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,cAAc,CAACC,SAAS,CAAC;EACnD,MAAMa,SAAS,GAAG,QAAsD;IAAA,IAArD;MAAEC,WAAW;MAAEC,WAAW;MAAEC;IAAmB,CAAC;IACjE,IAAI,CAACD,WAAW,EAAE;IAClBH,QAAQ,CAAEK,QAAQ,IAAK;MACrB,MAAMC,SAAS,GAAG,CAAC,GAAGD,QAAQ,CAAC;MAC/BC,SAAS,CAACC,MAAM,CAACH,MAAM,CAACI,KAAK,EAAE,CAAC,CAAC;MACjCF,SAAS,CAACC,MAAM,CAACJ,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEK,KAAK,EAAE,CAAC,EAAEN,WAAW,CAAC;MACpD,OAAOI,SAAS;IAClB,CAAC,CAAC;EACJ,CAAC;EACD,oBACE,QAAC,eAAe;IAAC,SAAS,EAAEL,SAAU;IAAA,uBACpC,QAAC,OAAO;MAAA,uBACN,QAAC,MAAM;QAAA,uBACL,QAAC,SAAS;UAAC,WAAW,EAAC,KAAK;UAAA,UACxBQ,QAAQ,iBACR,QAAC,KAAK;YAAC,GAAG,EAAEA,QAAQ,CAACC,QAAS;YAAA,GAAKD,QAAQ,CAACE,cAAc;YAAA,WACvDZ,KAAK,CAACa,GAAG,CAAC,CAACC,IAAI,EAAEL,KAAK,kBACrB,QAAC,SAAS;cAAY,WAAW,EAAEK,IAAK;cAAC,KAAK,EAAEL,KAAM;cAAA,UAClDC,QAAQ,iBACR,QAAC,IAAI;gBACH,GAAG,EAAEA,QAAQ,CAACC,QAAS;gBAAA,GACnBD,QAAQ,CAACK,eAAe;gBAAA,GACxBL,QAAQ,CAACM,cAAc;gBAAA,UAE1BF;cAAI;gBAAA;gBAAA;gBAAA;cAAA;YAER,GATaA,IAAI;cAAA;cAAA;cAAA;YAAA,QAWrB,CAAC,EACDJ,QAAQ,CAACO,WAAW;UAAA;YAAA;YAAA;YAAA;UAAA;QAExB;UAAA;UAAA;UAAA;QAAA;MACS;QAAA;QAAA;QAAA;MAAA;IACL;MAAA;MAAA;MAAA;IAAA;EACD;IAAA;IAAA;IAAA;EAAA,QACM;AAEtB;AAAC,GAvCQlB,GAAG;EAAA,QACgBX,cAAc;AAAA;AAAA,MADjCW,GAAG;AAyCZ,eAAeA,GAAG;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}