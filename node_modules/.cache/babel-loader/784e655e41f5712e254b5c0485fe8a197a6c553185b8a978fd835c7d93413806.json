{"ast":null,"code":"var _jsxFileName = \"/Users/dustin/dustins/react-masterclass/src/App.tsx\",\n  _s = $RefreshSig$();\nimport styled from \"styled-components\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport { useRecoilState } from \"recoil\";\nimport { toDoState } from \"./atoms\";\nimport Board from \"./Components/Board\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  display: flex;\n  max-width: 480px;\n  width: 100%;\n  margin: 0 auto;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n_c = Wrapper;\nconst Boards = styled.div`\n  background-color: gray;\n  display: grid;\n  width: 100%;\n  grid-template-columns: repeat(3, 1fr);\n`;\n_c2 = Boards;\nfunction App() {\n  _s();\n  const [toDos, setToDos] = useRecoilState(toDoState);\n  const onDragEnd = info => {\n    const {\n      destination,\n      draggableId,\n      source\n    } = info;\n    if (!destination) return;\n    if ((destination === null || destination === void 0 ? void 0 : destination.droppableId) === source.droppableId) {\n      setToDos(oldBoards => {\n        const boardCopy = [...oldBoards[source.droppableId]];\n        boardCopy.splice(source.index, 1);\n        boardCopy.splice(destination === null || destination === void 0 ? void 0 : destination.index, 0, draggableId);\n        return {\n          ...oldBoards,\n          [source.droppableId]: boardCopy\n        };\n      });\n    }\n    if ((destination === null || destination === void 0 ? void 0 : destination.droppableId) !== source.droppableId) {\n      setToDos(oldBoards => {\n        const sourceBoard = [...oldBoards[source.droppableId]];\n        const destinationBoard = [...oldBoards[destination.droppableId]];\n        sourceBoard.splice(source.index, 1);\n        destinationBoard.splice(destination === null || destination === void 0 ? void 0 : destination.index, 0, draggableId);\n        return {\n          ...oldBoards,\n          [source.droppableId]: sourceBoard,\n          [destination.droppableId]: destinationBoard\n        };\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: /*#__PURE__*/_jsxDEV(Boards, {\n        children: Object.keys(toDos).map(boardId => /*#__PURE__*/_jsxDEV(Board, {\n          boardId: boardId,\n          toDos: toDos[boardId]\n        }, boardId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5a67h5XNEBDPty+W6+XWtUnHNYw=\", false, function () {\n  return [useRecoilState];\n});\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Boards\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["styled","DragDropContext","useRecoilState","toDoState","Board","Wrapper","div","Boards","App","toDos","setToDos","onDragEnd","info","destination","draggableId","source","droppableId","oldBoards","boardCopy","splice","index","sourceBoard","destinationBoard","Object","keys","map","boardId"],"sources":["/Users/dustin/dustins/react-masterclass/src/App.tsx"],"sourcesContent":["import styled from \"styled-components\";\nimport {\n  DragDropContext,\n  Droppable,\n  Draggable,\n  DropResult,\n} from \"react-beautiful-dnd\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { toDoState } from \"./atoms\";\nimport DraggabbleCard from \"./Components/DragabbleCard\";\nimport Board from \"./Components/Board\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  max-width: 480px;\n  width: 100%;\n  margin: 0 auto;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\nconst Boards = styled.div`\n  background-color: gray;\n  display: grid;\n  width: 100%;\n  grid-template-columns: repeat(3, 1fr);\n`;\n\nfunction App() {\n  const [toDos, setToDos] = useRecoilState(toDoState);\n  const onDragEnd = (info: DropResult) => {\n    const { destination, draggableId, source } = info;\n    if (!destination) return;\n    if (destination?.droppableId === source.droppableId) {\n      setToDos((oldBoards) => {\n        const boardCopy = [...oldBoards[source.droppableId]];\n        boardCopy.splice(source.index, 1);\n        boardCopy.splice(destination?.index, 0, draggableId);\n        return { ...oldBoards, [source.droppableId]: boardCopy };\n      });\n    }\n    if (destination?.droppableId !== source.droppableId) {\n      setToDos((oldBoards) => {\n        const sourceBoard = [...oldBoards[source.droppableId]];\n        const destinationBoard = [...oldBoards[destination.droppableId]];\n        sourceBoard.splice(source.index, 1);\n        destinationBoard.splice(destination?.index, 0, draggableId);\n        return {\n          ...oldBoards,\n          [source.droppableId]: sourceBoard,\n          [destination.droppableId]: destinationBoard,\n        };\n      });\n    }\n  };\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Wrapper>\n        <Boards>\n          {Object.keys(toDos).map((boardId) => (\n            <Board boardId={boardId} key={boardId} toDos={toDos[boardId]} />\n          ))}\n        </Boards>\n      </Wrapper>\n    </DragDropContext>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,mBAAmB;AACtC,SACEC,eAAe,QAIV,qBAAqB;AAC5B,SAASC,cAAc,QAAwB,QAAQ;AACvD,SAASC,SAAS,QAAQ,SAAS;AAEnC,OAAOC,KAAK,MAAM,oBAAoB;AAAC;AAEvC,MAAMC,OAAO,GAAGL,MAAM,CAACM,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,KARID,OAAO;AASb,MAAME,MAAM,GAAGP,MAAM,CAACM,GAAI;AAC1B;AACA;AACA;AACA;AACA,CAAC;AAAC,MALIC,MAAM;AAOZ,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,cAAc,CAACC,SAAS,CAAC;EACnD,MAAMQ,SAAS,GAAIC,IAAgB,IAAK;IACtC,MAAM;MAAEC,WAAW;MAAEC,WAAW;MAAEC;IAAO,CAAC,GAAGH,IAAI;IACjD,IAAI,CAACC,WAAW,EAAE;IAClB,IAAI,CAAAA,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEG,WAAW,MAAKD,MAAM,CAACC,WAAW,EAAE;MACnDN,QAAQ,CAAEO,SAAS,IAAK;QACtB,MAAMC,SAAS,GAAG,CAAC,GAAGD,SAAS,CAACF,MAAM,CAACC,WAAW,CAAC,CAAC;QACpDE,SAAS,CAACC,MAAM,CAACJ,MAAM,CAACK,KAAK,EAAE,CAAC,CAAC;QACjCF,SAAS,CAACC,MAAM,CAACN,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEO,KAAK,EAAE,CAAC,EAAEN,WAAW,CAAC;QACpD,OAAO;UAAE,GAAGG,SAAS;UAAE,CAACF,MAAM,CAACC,WAAW,GAAGE;QAAU,CAAC;MAC1D,CAAC,CAAC;IACJ;IACA,IAAI,CAAAL,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEG,WAAW,MAAKD,MAAM,CAACC,WAAW,EAAE;MACnDN,QAAQ,CAAEO,SAAS,IAAK;QACtB,MAAMI,WAAW,GAAG,CAAC,GAAGJ,SAAS,CAACF,MAAM,CAACC,WAAW,CAAC,CAAC;QACtD,MAAMM,gBAAgB,GAAG,CAAC,GAAGL,SAAS,CAACJ,WAAW,CAACG,WAAW,CAAC,CAAC;QAChEK,WAAW,CAACF,MAAM,CAACJ,MAAM,CAACK,KAAK,EAAE,CAAC,CAAC;QACnCE,gBAAgB,CAACH,MAAM,CAACN,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEO,KAAK,EAAE,CAAC,EAAEN,WAAW,CAAC;QAC3D,OAAO;UACL,GAAGG,SAAS;UACZ,CAACF,MAAM,CAACC,WAAW,GAAGK,WAAW;UACjC,CAACR,WAAW,CAACG,WAAW,GAAGM;QAC7B,CAAC;MACH,CAAC,CAAC;IACJ;EACF,CAAC;EACD,oBACE,QAAC,eAAe;IAAC,SAAS,EAAEX,SAAU;IAAA,uBACpC,QAAC,OAAO;MAAA,uBACN,QAAC,MAAM;QAAA,UACJY,MAAM,CAACC,IAAI,CAACf,KAAK,CAAC,CAACgB,GAAG,CAAEC,OAAO,iBAC9B,QAAC,KAAK;UAAC,OAAO,EAAEA,OAAQ;UAAe,KAAK,EAAEjB,KAAK,CAACiB,OAAO;QAAE,GAA/BA,OAAO;UAAA;UAAA;UAAA;QAAA,QACtC;MAAC;QAAA;QAAA;QAAA;MAAA;IACK;MAAA;MAAA;MAAA;IAAA;EACD;IAAA;IAAA;IAAA;EAAA,QACM;AAEtB;AAAC,GAtCQlB,GAAG;EAAA,QACgBN,cAAc;AAAA;AAAA,MADjCM,GAAG;AAwCZ,eAAeA,GAAG;AAAC;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}