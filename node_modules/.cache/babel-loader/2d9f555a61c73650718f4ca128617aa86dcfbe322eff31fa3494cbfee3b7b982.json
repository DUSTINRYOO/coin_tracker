{"ast":null,"code":"var _jsxFileName = \"/Users/dustin/dustins/react-masterclass/src/Screen/routes/Chart.tsx\",\n  _s = $RefreshSig$();\nimport { useQuery } from \"@tanstack/react-query\";\nimport { fetchCoinHistory } from \"../../api\";\nimport { useCoinId } from \"./Coin\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chart() {\n  _s();\n  const {\n    coinId\n  } = useCoinId();\n  const {\n    isLoading,\n    data\n  } = useQuery([\"ohlcv\", coinId], () => fetchCoinHistory(coinId));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? \"Loading\" : /*#__PURE__*/_jsxDEV(ReactApexChart, {\n      type: \"line\",\n      height: 300,\n      width: 500,\n      series: [{\n        name: \"sales\",\n        data: data === null || data === void 0 ? void 0 : data.map(price => parseFloat(price.close))\n      }],\n      options: {\n        theme: {\n          mode: \"dark\"\n        },\n        stroke: {\n          curve: \"smooth\",\n          width: 4\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(Chart, \"+AwOxTSSSybUqpjQPpwyn8EFVNk=\", false, function () {\n  return [useCoinId, useQuery];\n});\n_c = Chart;\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["useQuery","fetchCoinHistory","useCoinId","ReactApexChart","Chart","coinId","isLoading","data","name","map","price","parseFloat","close","theme","mode","stroke","curve","width"],"sources":["/Users/dustin/dustins/react-masterclass/src/Screen/routes/Chart.tsx"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\";\nimport { fetchCoinHistory } from \"../../api\";\nimport { useCoinId } from \"./Coin\";\nimport ReactApexChart from \"react-apexcharts\";\n\ninterface IHistoricalData {\n  time_open: number;\n  time_close: number;\n  open: string;\n  high: string;\n  low: string;\n  close: string;\n  volume: string;\n  market_cap: number;\n}\n\nfunction Chart() {\n  const { coinId } = useCoinId();\n  const { isLoading, data } = useQuery<IHistoricalData[]>(\n    [\"ohlcv\", coinId],\n    () => fetchCoinHistory(coinId)\n  );\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading\"\n      ) : (\n        <ReactApexChart\n          type=\"line\"\n          height={300}\n          width={500}\n          series={[\n            {\n              name: \"sales\",\n              data: data?.map((price) => parseFloat(price.close)) as number[],\n            },\n          ]}\n          options={{\n            theme: {\n              mode: \"dark\",\n            },\n            stroke: {\n              curve: \"smooth\",\n              width: 4,\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Chart;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,gBAAgB,QAAQ,WAAW;AAC5C,SAASC,SAAS,QAAQ,QAAQ;AAClC,OAAOC,cAAc,MAAM,kBAAkB;AAAC;AAa9C,SAASC,KAAK,GAAG;EAAA;EACf,MAAM;IAAEC;EAAO,CAAC,GAAGH,SAAS,EAAE;EAC9B,MAAM;IAAEI,SAAS;IAAEC;EAAK,CAAC,GAAGP,QAAQ,CAClC,CAAC,OAAO,EAAEK,MAAM,CAAC,EACjB,MAAMJ,gBAAgB,CAACI,MAAM,CAAC,CAC/B;EACD,oBACE;IAAA,UACGC,SAAS,GACR,SAAS,gBAET,QAAC,cAAc;MACb,IAAI,EAAC,MAAM;MACX,MAAM,EAAE,GAAI;MACZ,KAAK,EAAE,GAAI;MACX,MAAM,EAAE,CACN;QACEE,IAAI,EAAE,OAAO;QACbD,IAAI,EAAEA,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,GAAG,CAAEC,KAAK,IAAKC,UAAU,CAACD,KAAK,CAACE,KAAK,CAAC;MACpD,CAAC,CACD;MACF,OAAO,EAAE;QACPC,KAAK,EAAE;UACLC,IAAI,EAAE;QACR,CAAC;QACDC,MAAM,EAAE;UACNC,KAAK,EAAE,QAAQ;UACfC,KAAK,EAAE;QACT;MACF;IAAE;MAAA;MAAA;MAAA;IAAA;EAEL;IAAA;IAAA;IAAA;EAAA,QACG;AAEV;AAAC,GAlCQb,KAAK;EAAA,QACOF,SAAS,EACAF,QAAQ;AAAA;AAAA,KAF7BI,KAAK;AAoCd,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}