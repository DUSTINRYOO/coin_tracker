{"ast":null,"code":"var _jsxFileName = \"/Users/dustin/dustins/react-masterclass/src/Screen/routes/Chart.tsx\",\n  _s = $RefreshSig$();\nimport { useQuery } from \"@tanstack/react-query\";\nimport { fetchCoinHistory } from \"../../api\";\nimport { useCoinId } from \"./Coin\";\nimport ReactApexChart from \"react-apexcharts\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chart() {\n  _s();\n  const {\n    coinId\n  } = useCoinId();\n  const {\n    isLoading,\n    data\n  } = useQuery([\"ohlcv\", coinId], () => fetchCoinHistory(coinId));\n  /* \n      [\n        {\n          name: \"sales\",\n          data: data?.map((price) => parseFloat(price.close)) as number[],\n        },\n      ] */\n  const coinChart = data === null || data === void 0 ? void 0 : data.map(coin => ({\n    x: new Date(coin.time_open),\n    y: [parseFloat(coin.open), parseFloat(coin.high), parseFloat(coin.low), parseFloat(coin.close)]\n  }));\n  console.log(coinChart);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? \"Loading\" : /*#__PURE__*/_jsxDEV(ReactApexChart, {\n      type: \"candlestick\",\n      height: 300,\n      width: 500,\n      series: [{\n        data: coinChart\n      }],\n      options: {\n        colors: [\"#2E93fA\", \"#66DA26\", \"#546E7A\", \"#E91E63\", \"#FF9800\"],\n        chart: {\n          type: \"candlestick\",\n          height: 350\n        },\n        title: {\n          text: \"CandleStick Chart\",\n          align: \"left\"\n        },\n        xaxis: {\n          type: \"datetime\"\n        },\n        yaxis: {\n          tooltip: {\n            enabled: true\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(Chart, \"+AwOxTSSSybUqpjQPpwyn8EFVNk=\", false, function () {\n  return [useCoinId, useQuery];\n});\n_c = Chart;\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["useQuery","fetchCoinHistory","useCoinId","ReactApexChart","React","Chart","coinId","isLoading","data","coinChart","map","coin","x","Date","time_open","y","parseFloat","open","high","low","close","console","log","colors","chart","type","height","title","text","align","xaxis","yaxis","tooltip","enabled"],"sources":["/Users/dustin/dustins/react-masterclass/src/Screen/routes/Chart.tsx"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\";\nimport { fetchCoinHistory } from \"../../api\";\nimport { useCoinId } from \"./Coin\";\nimport ReactApexChart from \"react-apexcharts\";\nimport React from \"react\";\n\ninterface IHistoricalData {\n  time_open: number;\n  time_close: number;\n  open: string;\n  high: string;\n  low: string;\n  close: string;\n  volume: string;\n  market_cap: number;\n}\n\nfunction Chart() {\n  const { coinId } = useCoinId();\n  const { isLoading, data } = useQuery<IHistoricalData[]>(\n    [\"ohlcv\", coinId],\n    () => fetchCoinHistory(coinId)\n  );\n  /* \n      [\n        {\n          name: \"sales\",\n          data: data?.map((price) => parseFloat(price.close)) as number[],\n        },\n      ] */\n  const coinChart = data?.map((coin) => ({\n    x: new Date(coin.time_open),\n    y: [\n      parseFloat(coin.open),\n      parseFloat(coin.high),\n      parseFloat(coin.low),\n      parseFloat(coin.close),\n    ],\n  }));\n  console.log(coinChart);\n\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading\"\n      ) : (\n        <ReactApexChart\n          type=\"candlestick\"\n          height={300}\n          width={500}\n          series={[\n            {\n              data: coinChart!,\n            },\n          ]}\n          options={{\n            colors: [\"#2E93fA\", \"#66DA26\", \"#546E7A\", \"#E91E63\", \"#FF9800\"],\n            chart: {\n              type: \"candlestick\",\n              height: 350,\n            },\n            title: {\n              text: \"CandleStick Chart\",\n              align: \"left\",\n            },\n            xaxis: {\n              type: \"datetime\",\n            },\n            yaxis: {\n              tooltip: {\n                enabled: true,\n              },\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Chart;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,gBAAgB,QAAQ,WAAW;AAC5C,SAASC,SAAS,QAAQ,QAAQ;AAClC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,KAAK,MAAM,OAAO;AAAC;AAa1B,SAASC,KAAK,GAAG;EAAA;EACf,MAAM;IAAEC;EAAO,CAAC,GAAGJ,SAAS,EAAE;EAC9B,MAAM;IAAEK,SAAS;IAAEC;EAAK,CAAC,GAAGR,QAAQ,CAClC,CAAC,OAAO,EAAEM,MAAM,CAAC,EACjB,MAAML,gBAAgB,CAACK,MAAM,CAAC,CAC/B;EACD;AACF;AACA;AACA;AACA;AACA;AACA;EACE,MAAMG,SAAS,GAAGD,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,GAAG,CAAEC,IAAI,KAAM;IACrCC,CAAC,EAAE,IAAIC,IAAI,CAACF,IAAI,CAACG,SAAS,CAAC;IAC3BC,CAAC,EAAE,CACDC,UAAU,CAACL,IAAI,CAACM,IAAI,CAAC,EACrBD,UAAU,CAACL,IAAI,CAACO,IAAI,CAAC,EACrBF,UAAU,CAACL,IAAI,CAACQ,GAAG,CAAC,EACpBH,UAAU,CAACL,IAAI,CAACS,KAAK,CAAC;EAE1B,CAAC,CAAC,CAAC;EACHC,OAAO,CAACC,GAAG,CAACb,SAAS,CAAC;EAEtB,oBACE;IAAA,UACGF,SAAS,GACR,SAAS,gBAET,QAAC,cAAc;MACb,IAAI,EAAC,aAAa;MAClB,MAAM,EAAE,GAAI;MACZ,KAAK,EAAE,GAAI;MACX,MAAM,EAAE,CACN;QACEC,IAAI,EAAEC;MACR,CAAC,CACD;MACF,OAAO,EAAE;QACPc,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;QAC/DC,KAAK,EAAE;UACLC,IAAI,EAAE,aAAa;UACnBC,MAAM,EAAE;QACV,CAAC;QACDC,KAAK,EAAE;UACLC,IAAI,EAAE,mBAAmB;UACzBC,KAAK,EAAE;QACT,CAAC;QACDC,KAAK,EAAE;UACLL,IAAI,EAAE;QACR,CAAC;QACDM,KAAK,EAAE;UACLC,OAAO,EAAE;YACPC,OAAO,EAAE;UACX;QACF;MACF;IAAE;MAAA;MAAA;MAAA;IAAA;EAEL;IAAA;IAAA;IAAA;EAAA,QACG;AAEV;AAAC,GA7DQ5B,KAAK;EAAA,QACOH,SAAS,EACAF,QAAQ;AAAA;AAAA,KAF7BK,KAAK;AA+Dd,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}